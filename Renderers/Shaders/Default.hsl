/* CHANGELOG
 * Written by Josh Grooms on 20160531
 */



/** EXTENSIONS **/
#extension GL_ARB_bindless_texture : require
#extension GL_ARB_shader_draw_parameters : require



/** DATA **/
struct PerEntity
{
    mat4        World;
    vec4        Color;
};

struct PerFrame
{
    mat4        Projection;
    mat4        View;
    vec3        CameraPosition;
    uint        Time;
};



struct EntityData
{
    uint        MaterialIndex;
    uint        TransformIndex;
};

struct MaterialData
{
    vec4        PrimaryColor;
    vec4        SecondaryColor;
    sampler2D   Texture;
    float       Ambience;
    float       SpecularPower;
    bool        IsTextured;
};

struct TransformData
{
    mat4        ModelTransform;
    mat4        TextureTransform;
    mat4        WorldTransform;
};




layout(binding = 0, std140) uniform PerEntityBuffer
{
    PerEntity PerEntityData[128];
};

layout(binding = 1, std140) uniform PerFrameBuffer
{
    PerFrame PerFrameData[1];
};




layout(binding = 2, std140) uniform EntityBuffer
{
    EntityData      Entities[128];
};

layout(binding = 3, std140) uniform MaterialBuffer
{
    MaterialData    Materials[128];
};

layout(binding = 4, std140) uniform TransformBuffer
{
    TransformData   Transformations[128];
};
/* CHANGELOG
 * Written by Josh Grooms on 20150903
 */

#version 450 core
#include "Default.hsl"

layout(location = 0) in vec3 Position;
layout(location = 1) in vec3 Normal;
layout(location = 2) in vec3 UVW;

out PixelShaderInput
{
    flat int    EntityIndex;
    vec3        TexUVW;
} Output;



void main(void)
{
    EntityData ids          = Entities[gl_BaseInstanceARB];
    TransformData xforms    = Transformations[ids.TransformIndex];
    Output.EntityIndex      = gl_BaseInstanceARB;
    Output.TexUVW           = (xforms.TextureTransform * vec4(UVW, 1.0)).xyz;

    gl_Position = 
        PerFrameData[0].Projection  * 
        PerFrameData[0].View        * 
        xforms.WorldTransform       *
        xforms.ModelTransform       *
        vec4(Position, 1.0);
}
